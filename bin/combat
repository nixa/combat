#!/usr/bin/env ruby
COMBAT_ROOT = File.join(File.dirname(File.expand_path(__FILE__)), '..')
$:.unshift File.join(COMBAT_ROOT, 'lib')
require "rubygems"
require "bundler/setup"

# gems and libraries
require 'ostruct'
require 'erb'
require 'yaml'
require 'thor'

# local classes
require 'settings'

class Combat < Thor
  include Thor::Actions

  desc "setup", "Setup a new mobile project for deploying"
  def setup
    defaults = load_defaults
    name = Dir['*.xcodeproj']

    if name.size == 1
      name.first.gsub(/.xcodeproj/, '')
      type = 'iphone'
    else
      name = Dir['AndroidManifest.xml']
      
      if name.size == 1
        name = File.basename(Dir.pwd)
        type = 'android'
      else
        name = 'New project'
        type = 'iphone'
      end
    end

    defaults[:path] = File.join(defaults[:path], type, name) if defaults[:path]
    defaults[:url] = File.join(defaults[:url], type, name) if defaults[:url]

    settings = {
      :type => type,
      :name => name,
      :host => defaults[:host] || 'my.hostname.com',
      :path => defaults[:path] || '/var/www/my.hostname.com/deploy_folder',
      :url => defaults[:url] || 'http://my.hostname.com/deploy_folder',
      :remote_user => defaults[:remote_user] || 'www-data'
    }    

    unless File.exists?('combat.yml')
      create_file 'combat.yml', settings.to_yaml
    end
    
    system "mkdir -p deployed"
    
    if settings[:type] == 'iphone'
      say "Combat has been setup for #{name}. Copy your #{name}.mobileprovision, #{name}.plist and #{name}.ipa to the deploy/ folder"
    else
      say "Combat has been setup for #{name}."
    end
  end
  
  desc "deploy", "Deploy a project to the server for testing"
  def deploy
    load_config
    
    if @config.valid?
      system "ssh #{@config.user_and_host} 'mkdir -p #{@config.path}'"
      system "ssh #{@config.user_and_host} 'rm -fr #{@config.path}/*'"
      
      if @config.type == 'iphone'
        system "scp deployed/#{@config.provision_file_name} #{@config.user_and_host}:#{@config.path}"      
        system "scp deployed/#{@config.plist_file} #{@config.user_and_host}:#{@config.path}"
        system "scp deployed/#{@config.ipa_file} #{@config.user_and_host}:#{@config.path}"
      else
        system "scp bin/*.apk #{@config.user_and_host}:#{@config.path}"
      end
      
      File.open('deployed/index.html', 'w+'){|x| 
        x.puts generate_html_file
      }
      system "scp deployed/index.html #{@config.user_and_host}:#{@config.path}"      
      remove_file 'deployed/index.html'
      
      say "Successfully deployed to #{@config.url}"
    else
      say "Config not valid, please check"
    end
  end

  no_tasks do
    def load_defaults
      defaults_file_path = File.expand_path('~/.combatrc')
      if File.exists?(defaults_file_path)
        YAML::load(File.read(defaults_file_path))
      else
        {}
      end
    end
    
    def load_config
      string = File.read("combat.yml")
      yml = YAML::load(string)
      @config = Settings.new(yml)      
    end
    
    def header(text)
      say "=" * text.size
      say text
      say "=" * text.size    
    end
    
    def generate_html_file
      erb = ERB.new(File.read(@config.template_file))
      erb.result(@config.get_binding)
    end    
  end
end

Combat.start